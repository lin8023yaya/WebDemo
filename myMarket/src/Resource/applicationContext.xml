<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd
	http://www.springframework.org/schema/mvc
	http://www.springframework.org/schema/mvc/spring-mvc.xsd        
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd">
	<context:component-scan base-package="com.ctcs.market">
	</context:component-scan>
	<bean id="wb" class="com.ctcs.market.common.WebBinding"></bean>

		<!-- 这个bean的定义必须要放在mvc:annotation-driven才能生效 -->
	<!--<bean
		class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
		<property name="webBindingInitializer" ref="wb"></property>
		<property name="messageConverters">
			<list>
				<bean
					class="org.springframework.http.converter.StringHttpMessageConverter">
					<property name="supportedMediaTypes">
						<list>
							<value>text/html;charset=UTF-8</value>
						</list>
					</property>
				</bean>
				&lt;!&ndash; 增加对二进制流的输出支持 &ndash;&gt;
				<bean
					class="org.springframework.http.converter.ByteArrayHttpMessageConverter"></bean>
			</list>
		</property>
	</bean>-->

	<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<list>
				<bean class="org.springframework.http.converter.ByteArrayHttpMessageConverter" />
				<bean class = "org.springframework.http.converter.StringHttpMessageConverter">
					<property name="supportedMediaTypes" value="text/plain;charset=UTF-8" />
				</bean>
				<bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
					<property name="supportedMediaTypes">
						<list>
							<value>text/html;charset=UTF-8</value>
						</list>
					</property>
				</bean>
			</list>
		</property>
	</bean>



	<mvc:annotation-driven></mvc:annotation-driven>
	<mvc:default-servlet-handler />
	<!-- 文件上传的支持 -->

	<!-- 增加对二进制流的属性支持 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 可选属性,为文件最大上传尺寸,最大允许上传20mb的文件 -->
		<property name="maxUploadSize" value="20971520"></property>
	</bean>

	<!-- 设置跳转页面的前置路径为/WEB-INF/view -->
	<!-- <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver"> 
		<property name="prefix" value="/WEB-INF/view"></property> 设置默认后缀,但不推荐使用,因为系统不一定所有页面都是jsp的 
		<property name="suffix" value=".jsp"></property> </bean> -->

	<!-- 利用DBCP|C3P0连接池配置数据源 sm整合 -->
	<bean id="ds" class="org.apache.commons.dbcp2.BasicDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver"></property>
		<!-- 公网IP：60.205.143.19；内网IP：10.26.83.199 -->
		<property name="url" value="jdbc:mysql://127.0.0.1/goodsdb?useUnicode=true&amp;characterEncoding=UTF-8"></property>
		<property name="username" value="root"></property>
		<property name="password" value="root"></property>
	</bean>
	<!-- 初始化MyBatis SessionFactory,我们不再需要手动初始化SF对象,Mybatis会自动在IOC容器加载的时候初始化 -->
	<bean id="sf" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 设置数据源 -->
		<property name="dataSource" ref="ds"></property>
		<!-- 在SF初始化的时候自动扫描mybatis包下所有的mapper SQL的XML文件,不再需要一个一个手动注册 -->
		<property name="mapperLocations" value="classpath:mapper/*.xml"></property>
		<!-- 增加对于pageHelper的支持 -->
		<property name="configLocation" value="classpath:mybatis.xml"></property>
	</bean>

	<!-- 利用SqlSessionTemplate类来实例化Session对象 -->
	<bean id="session" class="org.mybatis.spring.SqlSessionTemplate">
		<!-- 在初始化SqlSessionTemplate的时候需要传入SessionFacotory -->
		<constructor-arg index="0" ref="sf"></constructor-arg>
	</bean>

	<!-- 声明式事务配置mybatis版本 定义事务管理器,用于打开\提交\回滚事务 -->
	<bean id="txManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="ds"></property>
	</bean>
	<!-- 开启注解形式声明式事务 -->
	<tx:annotation-driven transaction-manager="txManager" />
</beans>